#!/bin/sh
#
# An example hook script to verify what is about to be committed.
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#
# To enable this hook, rename this file to "pre-commit".

if git rev-parse --verify HEAD >/dev/null 2>&1
then
	against=HEAD
else
	# Initial commit: diff against an empty tree object
	against=4b825dc642cb6eb9a060e54bf8d69288fbee4904
fi

# If you want to allow non-ascii filenames set this variable to true.
allownonascii=$(git config hooks.allownonascii)

# Redirect output to stderr.
exec 1>&2

FILES_PATTERN='\.(scala)(\..+)?$'
FORBIDDEN='FIXME'
git diff --cached --name-only | \
      grep -E $FILES_PATTERN | \
          GREP_COLOR='4;5;37;41' xargs grep --color --with-filename -n $FORBIDDEN && \
          echo 'COMMIT REJECTED. Found "FIXME". Please remove them before commiting.' && exit 1


# If there are whitespace errors, print the offending file names and fail.
exec git diff-index --check --cached $against --
