[[34m Info  [0m] Running Certification phase
[[34m Info  [0m] 
[[34m Info  [0m] -----> Analysing function ballBeam...
[[34m Info  [0m] inputs: Map(state1 -> [0, 1] ( -- ) (true), state2 -> [-0.5, 0.5] ( -- ) (true), state3 -> [0, 0.5] ( -- ) (true), state4 -> [0, 0.5] ( -- ) (true))
All constraints generated: 
(((0.0 ≤ state1) ∧ (state1 ≤ 1.0) ∧ (-0.5 ≤ state2) ∧ (state2 ≤ 0.5) ∧ (0.0 ≤ state3) ∧ (state3 ≤ 0.5) ∧ (0.0 ≤ state4) ∧ (state4 ≤ 0.5) ∧ rndoff(state1) ∧ rndoff(state2) ∧ rndoff(state3) ∧ rndoff(state4)) && (#res == ((((-1828.6 * state1) + (-1028.6 * state2)) + (-2008.0 * state3)) + (-104.0 * state4)))) ==> noise(#res,1.0E-7)
[[34m Info  [0m] 
[[34m Info  [0m] -----> Analysing function batchReactorOut1...
[[34m Info  [0m] inputs: Map(state1 -> [-1, 1] ( -- ) (true), state2 -> [-1, 1] ( -- ) (true), state3 -> [-1, 1] ( -- ) (true), state4 -> [-1, 1] ( -- ) (true))
All constraints generated: 
(((-1.0 ≤ state1) ∧ (state1 ≤ 1.0) ∧ (-1.0 ≤ state2) ∧ (state2 ≤ 1.0) ∧ (-1.0 ≤ state3) ∧ (state3 ≤ 1.0) ∧ (-1.0 ≤ state4) ∧ (state4 ≤ 1.0) ∧ rndoff(state1) ∧ rndoff(state2) ∧ rndoff(state3) ∧ rndoff(state4)) && (#res == ((((-0.0583 * state1) + (-0.9083 * state2)) + (-0.3258 * state3)) + (-0.8721 * state4)))) ==> noise(#res,1.0E-7)
[[34m Info  [0m] 
[[34m Info  [0m] -----> Analysing function batchReactorOut2...
[[34m Info  [0m] inputs: Map(state1 -> [-1, 1] ( -- ) (true), state2 -> [-1, 1] ( -- ) (true), state3 -> [-1, 1] ( -- ) (true), state4 -> [-1, 1] ( -- ) (true))
All constraints generated: 
(((-1.0 ≤ state1) ∧ (state1 ≤ 1.0) ∧ (-1.0 ≤ state2) ∧ (state2 ≤ 1.0) ∧ (-1.0 ≤ state3) ∧ (state3 ≤ 1.0) ∧ (-1.0 ≤ state4) ∧ (state4 ≤ 1.0) ∧ rndoff(state1) ∧ rndoff(state2) ∧ rndoff(state3) ∧ rndoff(state4)) && (#res == ((((2.4638 * state1) + (0.0504 * state2)) + (1.7099 * state3)) + (-1.1653 * state4)))) ==> noise(#res,1.0E-7)
[[34m Info  [0m] 
[[34m Info  [0m] -----> Analysing function batchReactorState1...
[[34m Info  [0m] inputs: Map(state3 -> [-1, 1] ( -- ) (true), state2 -> [-1, 1] ( -- ) (true), y2 -> [-1, 1] ( -- ) (true), y1 -> [-1, 1] ( -- ) (true), state4 -> [-1, 1] ( -- ) (true), state1 -> [-1, 1] ( -- ) (true))
All constraints generated: 
(((-1.0 ≤ state1) ∧ (state1 ≤ 1.0) ∧ (-1.0 ≤ state2) ∧ (state2 ≤ 1.0) ∧ (-1.0 ≤ state3) ∧ (state3 ≤ 1.0) ∧ (-1.0 ≤ state4) ∧ (state4 ≤ 1.0) ∧ (-1.0 ≤ y1) ∧ (y1 ≤ 1.0) ∧ (-1.0 ≤ y2) ∧ (y2 ≤ 1.0) ∧ rndoff(state1) ∧ rndoff(state2) ∧ rndoff(state3) ∧ rndoff(state4) ∧ rndoff(y1) ∧ rndoff(y2)) && (#res == ((((((0.934292 * state1) + (0.008415 * state2)) + (-0.014106 * state3)) + (0.023954 * state4)) + (0.0774 * y1)) + (-0.0103 * y2)))) ==> noise(#res,1.0E-7)
[[34m Info  [0m] 
[[34m Info  [0m] -----> Analysing function batchReactorState2...
[[34m Info  [0m] inputs: Map(state4 -> [-1, 1] ( -- ) (true), y2 -> [-1, 1] ( -- ) (true), state3 -> [-1, 1] ( -- ) (true), y1 -> [-1, 1] ( -- ) (true), state2 -> [-1, 1] ( -- ) (true), state1 -> [-1, 1] ( -- ) (true))
All constraints generated: 
(((-1.0 ≤ state1) ∧ (state1 ≤ 1.0) ∧ (-1.0 ≤ state2) ∧ (state2 ≤ 1.0) ∧ (-1.0 ≤ state3) ∧ (state3 ≤ 1.0) ∧ (-1.0 ≤ state4) ∧ (state4 ≤ 1.0) ∧ (-1.0 ≤ y1) ∧ (y1 ≤ 1.0) ∧ (-1.0 ≤ y2) ∧ (y2 ≤ 1.0) ∧ rndoff(state1) ∧ rndoff(state2) ∧ rndoff(state3) ∧ rndoff(state4) ∧ rndoff(y1) ∧ rndoff(y2)) && (#res == ((((((-0.006769 * state1) + (0.884924 * state2)) + (-0.016066 * state3)) + (-0.044019 * state4)) + (-0.0022 * y1)) + (0.0227 * y2)))) ==> noise(#res,1.0E-7)
[[34m Info  [0m] 
[[34m Info  [0m] -----> Analysing function batchReactorState3...
[[34m Info  [0m] inputs: Map(y1 -> [-1, 1] ( -- ) (true), state2 -> [-1, 1] ( -- ) (true), state4 -> [-1, 1] ( -- ) (true), y2 -> [-1, 1] ( -- ) (true), state1 -> [-1, 1] ( -- ) (true), state3 -> [-1, 1] ( -- ) (true))
All constraints generated: 
(((-1.0 ≤ state1) ∧ (state1 ≤ 1.0) ∧ (-1.0 ≤ state2) ∧ (state2 ≤ 1.0) ∧ (-1.0 ≤ state3) ∧ (state3 ≤ 1.0) ∧ (-1.0 ≤ state4) ∧ (state4 ≤ 1.0) ∧ (-1.0 ≤ y1) ∧ (y1 ≤ 1.0) ∧ (-1.0 ≤ y2) ∧ (y2 ≤ 1.0) ∧ rndoff(state1) ∧ rndoff(state2) ∧ rndoff(state3) ∧ rndoff(state4) ∧ rndoff(y1) ∧ rndoff(y2)) && (#res == ((((((-0.092148 * state1) + (-0.011039 * state2)) + (0.853511 * state3)) + (0.107537 * state4)) + (0.0267 * y1)) + (0.0398 * y2)))) ==> noise(#res,1.0E-7)
[[34m Info  [0m] 
[[34m Info  [0m] -----> Analysing function batchReactorState4...
[[34m Info  [0m] inputs: Map(state2 -> [-1, 1] ( -- ) (true), state4 -> [-1, 1] ( -- ) (true), state3 -> [-1, 1] ( -- ) (true), y2 -> [-1, 1] ( -- ) (true), y1 -> [-1, 1] ( -- ) (true), state1 -> [-1, 1] ( -- ) (true))
All constraints generated: 
(((-1.0 ≤ state1) ∧ (state1 ≤ 1.0) ∧ (-1.0 ≤ state2) ∧ (state2 ≤ 1.0) ∧ (-1.0 ≤ state3) ∧ (state3 ≤ 1.0) ∧ (-1.0 ≤ state4) ∧ (state4 ≤ 1.0) ∧ (-1.0 ≤ y1) ∧ (y1 ≤ 1.0) ∧ (-1.0 ≤ y2) ∧ (y2 ≤ 1.0) ∧ rndoff(state1) ∧ rndoff(state2) ∧ rndoff(state3) ∧ rndoff(state4) ∧ rndoff(y1) ∧ rndoff(y2)) && (#res == ((((((-0.03641 * state1) + (0.030194 * state2)) + (-0.027155 * state3)) + (1.004619 * state4)) + (0.0356 * y1)) + (1.0E-4 * y2)))) ==> noise(#res,1.0E-7)
[[34m Info  [0m] 
[[34m Info  [0m] -----> Analysing function trancair4Out...
[[34m Info  [0m] inputs: Map(state3 -> [-2.5, 6.5] ( -- ) (true), state1 -> [-2.5, 6.5] ( -- ) (true), state2 -> [-2.5, 6.5] ( -- ) (true), state0 -> [-2.5, 6.5] ( -- ) (true), state6 -> [-2, 12] ( -- ) (true), state5 -> [-2, 12] ( -- ) (true), state4 -> [-2, 12] ( -- ) (true), state8 -> [-2, 12] ( -- ) (true), state7 -> [-2, 12] ( -- ) (true))
All constraints generated: 
(((-2.5 ≤ state0) ∧ (state0 ≤ 6.5) ∧ (-2.5 ≤ state1) ∧ (state1 ≤ 6.5) ∧ (-2.5 ≤ state2) ∧ (state2 ≤ 6.5) ∧ (-2.5 ≤ state3) ∧ (state3 ≤ 6.5) ∧ (-2.0 ≤ state4) ∧ (state4 ≤ 12.0) ∧ (-2.0 ≤ state4) ∧ (state4 ≤ 12.0) ∧ (-2.0 ≤ state5) ∧ (state5 ≤ 12.0) ∧ (-2.0 ≤ state6) ∧ (state6 ≤ 12.0) ∧ (-2.0 ≤ state7) ∧ (state7 ≤ 12.0) ∧ (-2.0 ≤ state8) ∧ (state8 ≤ 12.0) ∧ rndoff(state0) ∧ rndoff(state1) ∧ rndoff(state2) ∧ rndoff(state3) ∧ rndoff(state4) ∧ rndoff(state5) ∧ rndoff(state6) ∧ rndoff(state7) ∧ rndoff(state8)) && (#res == ((((((((((-1201.0 * state0) + (-4876.0 * state1)) + (13415.999999999998 * state2)) + (-10484.0 * state3)) + (-774.0 * state4)) + (-13620.000000000002 * state5)) + (10481.0 * state6)) + (20425.0 * state7)) + (-17815.0 * state8)) + 5212.1094496644555))) ==> noise(#res,1.0E-7)
[[34m Info  [0m] 
[[34m Info  [0m] -----> Analysing function trancair4State1...
[[34m Info  [0m] inputs: Map(state6 -> [-2, 12] ( -- ) (true), state0 -> [-2.5, 6.5] ( -- ) (true), y4 -> [-2, 12] ( -- ) (true), state7 -> [-2, 12] ( -- ) (true), y3 -> [-2, 12] ( -- ) (true), y0 -> [-2, 12] ( -- ) (true), state1 -> [-2.5, 6.5] ( -- ) (true), state8 -> [-2, 12] ( -- ) (true), state3 -> [-2.5, 6.5] ( -- ) (true), y2 -> [-2, 12] ( -- ) (true), state2 -> [-2.5, 6.5] ( -- ) (true), y1 -> [-2, 12] ( -- ) (true), state4 -> [-2, 12] ( -- ) (true), state5 -> [-2, 12] ( -- ) (true))
All constraints generated: 
(((-2.5 ≤ state0) ∧ (state0 ≤ 6.5) ∧ (-2.5 ≤ state1) ∧ (state1 ≤ 6.5) ∧ (-2.5 ≤ state2) ∧ (state2 ≤ 6.5) ∧ (-2.5 ≤ state3) ∧ (state3 ≤ 6.5) ∧ (-2.0 ≤ state4) ∧ (state4 ≤ 12.0) ∧ (-2.0 ≤ state4) ∧ (state4 ≤ 12.0) ∧ (-2.0 ≤ state5) ∧ (state5 ≤ 12.0) ∧ (-2.0 ≤ state6) ∧ (state6 ≤ 12.0) ∧ (-2.0 ≤ state7) ∧ (state7 ≤ 12.0) ∧ (-2.0 ≤ state8) ∧ (state8 ≤ 12.0) ∧ (-2.0 ≤ y0) ∧ (y0 ≤ 12.0) ∧ (-2.0 ≤ y1) ∧ (y1 ≤ 12.0) ∧ (-2.0 ≤ y2) ∧ (y2 ≤ 12.0) ∧ (-2.0 ≤ y3) ∧ (y3 ≤ 12.0) ∧ (-2.0 ≤ y4) ∧ (y4 ≤ 12.0) ∧ rndoff(state0) ∧ rndoff(state1) ∧ rndoff(state2) ∧ rndoff(state3) ∧ rndoff(state4) ∧ rndoff(state5) ∧ rndoff(state6) ∧ rndoff(state7) ∧ rndoff(state8) ∧ rndoff(y0) ∧ rndoff(y1) ∧ rndoff(y2) ∧ rndoff(y3) ∧ rndoff(y4)) && (#res == ((((((((((((((state0 + (-9.6239E-8 * state1)) + (2.65102E-7 * state2)) + (-2.07133E-7 * state3)) + (6.97639E-5 * state4)) + (-4.78152E-5 * state5)) + (-2.63725E-5 * state6)) + (-1.05202E-5 * state7)) + (-1.57626E-5 * state8)) + (3.0220751E-5 * y0)) + (-5.2453841E-5 * y1)) + (2.6579541E-5 * y2)) + (1.0923688E-5 * y3)) + (1.5410654E-5 * y4)) + 1.0296607175196162E-7))) ==> noise(#res,1.0E-7)
[[34m Info  [0m] 
[[34m Info  [0m] -----> Analysing function trancair4State2...
[[34m Info  [0m] inputs: Map(state0 -> [-2.5, 6.5] ( -- ) (true), y0 -> [-2, 12] ( -- ) (true), state3 -> [-2.5, 6.5] ( -- ) (true), state6 -> [-2, 12] ( -- ) (true), y4 -> [-2, 12] ( -- ) (true), y2 -> [-2, 12] ( -- ) (true), state7 -> [-2, 12] ( -- ) (true), state2 -> [-2.5, 6.5] ( -- ) (true), state4 -> [-2, 12] ( -- ) (true), state8 -> [-2, 12] ( -- ) (true), y3 -> [-2, 12] ( -- ) (true), state1 -> [-2.5, 6.5] ( -- ) (true), y1 -> [-2, 12] ( -- ) (true), state5 -> [-2, 12] ( -- ) (true))
All constraints generated: 
(((-2.5 ≤ state0) ∧ (state0 ≤ 6.5) ∧ (-2.5 ≤ state1) ∧ (state1 ≤ 6.5) ∧ (-2.5 ≤ state2) ∧ (state2 ≤ 6.5) ∧ (-2.5 ≤ state3) ∧ (state3 ≤ 6.5) ∧ (-2.0 ≤ state4) ∧ (state4 ≤ 12.0) ∧ (-2.0 ≤ state4) ∧ (state4 ≤ 12.0) ∧ (-2.0 ≤ state5) ∧ (state5 ≤ 12.0) ∧ (-2.0 ≤ state6) ∧ (state6 ≤ 12.0) ∧ (-2.0 ≤ state7) ∧ (state7 ≤ 12.0) ∧ (-2.0 ≤ state8) ∧ (state8 ≤ 12.0) ∧ (-2.0 ≤ y0) ∧ (y0 ≤ 12.0) ∧ (-2.0 ≤ y1) ∧ (y1 ≤ 12.0) ∧ (-2.0 ≤ y2) ∧ (y2 ≤ 12.0) ∧ (-2.0 ≤ y3) ∧ (y3 ≤ 12.0) ∧ (-2.0 ≤ y4) ∧ (y4 ≤ 12.0) ∧ rndoff(state0) ∧ rndoff(state1) ∧ rndoff(state2) ∧ rndoff(state3) ∧ rndoff(state4) ∧ rndoff(state5) ∧ rndoff(state6) ∧ rndoff(state7) ∧ rndoff(state8) ∧ rndoff(y0) ∧ rndoff(y1) ∧ rndoff(y2) ∧ rndoff(y3) ∧ rndoff(y4)) && (#res == (((((((((((((((-1.13598E-8 * state0) + (1.0 * state1)) + (1.2786E-7 * state2)) + (-9.96874E-8 * state3)) + (3.36288E-5 * state4)) + (3.94595E-5 * state5)) + (-6.09589E-5 * state6)) + (-3.51073E-5 * state7)) + (2.7313E-6 * state8)) + (-3.3636111E-5 * y0)) + (6.0410747E-5 * y1)) + (-3.8941208E-5 * y2)) + (3.5301806E-5 * y3)) + (-2.9009623E-6 * y4)) + 4.963331295944411E-8))) ==> noise(#res,1.0E-7)
[[34m Info  [0m] 
[[34m Info  [0m] -----> Analysing function trancair4State3...
[[34m Info  [0m] inputs: Map(state6 -> [-2, 12] ( -- ) (true), y0 -> [-2, 12] ( -- ) (true), state3 -> [-2.5, 6.5] ( -- ) (true), state7 -> [-2, 12] ( -- ) (true), y3 -> [-2, 12] ( -- ) (true), y4 -> [-2, 12] ( -- ) (true), state5 -> [-2, 12] ( -- ) (true), state1 -> [-2.5, 6.5] ( -- ) (true), y2 -> [-2, 12] ( -- ) (true), state0 -> [-2.5, 6.5] ( -- ) (true), y1 -> [-2, 12] ( -- ) (true), state8 -> [-2, 12] ( -- ) (true), state2 -> [-2.5, 6.5] ( -- ) (true), state4 -> [-2, 12] ( -- ) (true))
All constraints generated: 
(((-2.5 ≤ state0) ∧ (state0 ≤ 6.5) ∧ (-2.5 ≤ state1) ∧ (state1 ≤ 6.5) ∧ (-2.5 ≤ state2) ∧ (state2 ≤ 6.5) ∧ (-2.5 ≤ state3) ∧ (state3 ≤ 6.5) ∧ (-2.0 ≤ state4) ∧ (state4 ≤ 12.0) ∧ (-2.0 ≤ state4) ∧ (state4 ≤ 12.0) ∧ (-2.0 ≤ state5) ∧ (state5 ≤ 12.0) ∧ (-2.0 ≤ state6) ∧ (state6 ≤ 12.0) ∧ (-2.0 ≤ state7) ∧ (state7 ≤ 12.0) ∧ (-2.0 ≤ state8) ∧ (state8 ≤ 12.0) ∧ (-2.0 ≤ y0) ∧ (y0 ≤ 12.0) ∧ (-2.0 ≤ y1) ∧ (y1 ≤ 12.0) ∧ (-2.0 ≤ y2) ∧ (y2 ≤ 12.0) ∧ (-2.0 ≤ y3) ∧ (y3 ≤ 12.0) ∧ (-2.0 ≤ y4) ∧ (y4 ≤ 12.0) ∧ rndoff(state0) ∧ rndoff(state1) ∧ rndoff(state2) ∧ rndoff(state3) ∧ rndoff(state4) ∧ rndoff(state5) ∧ rndoff(state6) ∧ rndoff(state7) ∧ rndoff(state8) ∧ rndoff(y0) ∧ rndoff(y1) ∧ rndoff(y2) ∧ rndoff(y3) ∧ rndoff(y4)) && (#res == (((((((((((((((-3.85494E-9 * state0) + (-1.55578E-8 * state1)) + (1.0 * state2)) + (-3.33852E-8 * state3)) + (1.13515E-5 * state4)) + (8.09597E-6 * state5)) + (3.75166E-5 * state6)) + (-7.28888E-5 * state7)) + (7.51347E-6 * state8)) + (-1.1353997E-5 * y0)) + (-8.1397399E-6 * y1)) + (6.2517037E-5 * y2)) + (-2.7045432E-5 * y3)) + (-7.570773E-6 * y4)) + 1.675380513621237E-8))) ==> noise(#res,1.0E-7)
[[34m Info  [0m] 
[[34m Info  [0m] -----> Analysing function trancair4State4...
[[34m Info  [0m] inputs: Map(y0 -> [-2, 12] ( -- ) (true), state4 -> [-2, 12] ( -- ) (true), state5 -> [-2, 12] ( -- ) (true), y3 -> [-2, 12] ( -- ) (true), state8 -> [-2, 12] ( -- ) (true), y1 -> [-2, 12] ( -- ) (true), y2 -> [-2, 12] ( -- ) (true), state7 -> [-2, 12] ( -- ) (true), state2 -> [-2.5, 6.5] ( -- ) (true), state0 -> [-2.5, 6.5] ( -- ) (true), state6 -> [-2, 12] ( -- ) (true), state1 -> [-2.5, 6.5] ( -- ) (true), state3 -> [-2.5, 6.5] ( -- ) (true), y4 -> [-2, 12] ( -- ) (true))
All constraints generated: 
(((-2.5 ≤ state0) ∧ (state0 ≤ 6.5) ∧ (-2.5 ≤ state1) ∧ (state1 ≤ 6.5) ∧ (-2.5 ≤ state2) ∧ (state2 ≤ 6.5) ∧ (-2.5 ≤ state3) ∧ (state3 ≤ 6.5) ∧ (-2.0 ≤ state4) ∧ (state4 ≤ 12.0) ∧ (-2.0 ≤ state4) ∧ (state4 ≤ 12.0) ∧ (-2.0 ≤ state5) ∧ (state5 ≤ 12.0) ∧ (-2.0 ≤ state6) ∧ (state6 ≤ 12.0) ∧ (-2.0 ≤ state7) ∧ (state7 ≤ 12.0) ∧ (-2.0 ≤ state8) ∧ (state8 ≤ 12.0) ∧ (-2.0 ≤ y0) ∧ (y0 ≤ 12.0) ∧ (-2.0 ≤ y1) ∧ (y1 ≤ 12.0) ∧ (-2.0 ≤ y2) ∧ (y2 ≤ 12.0) ∧ (-2.0 ≤ y3) ∧ (y3 ≤ 12.0) ∧ (-2.0 ≤ y4) ∧ (y4 ≤ 12.0) ∧ rndoff(state0) ∧ rndoff(state1) ∧ rndoff(state2) ∧ rndoff(state3) ∧ rndoff(state4) ∧ rndoff(state5) ∧ rndoff(state6) ∧ rndoff(state7) ∧ rndoff(state8) ∧ rndoff(y0) ∧ rndoff(y1) ∧ rndoff(y2) ∧ rndoff(y3) ∧ rndoff(y4)) && (#res == (((((((((((((((-4.88831E-9 * state0) + (-1.94328E-8 * state1)) + (5.40591E-8 * state2)) + (1.0 * state3)) + (1.41246E-5 * state4)) + (-1.33425E-5 * state5)) + (4.35487E-6 * state6)) + (1.06102E-4 * state7)) + (-9.66574E-5 * state8)) + (-1.4127737E-5 * y0)) + (1.328804E-5 * y1)) + (-4.3128989E-6 * y2)) + (-6.0208156E-6 * y3)) + (-3.4137075E-6 * y4)) + 2.084697267469152E-8))) ==> noise(#res,1.0E-7)
[[34m Info  [0m] 
[[34m Info  [0m] -----> Analysing function trancair4State5...
[[34m Info  [0m] inputs: Map(state0 -> [-2.5, 6.5] ( -- ) (true), state7 -> [-2, 12] ( -- ) (true), state6 -> [-2, 12] ( -- ) (true), state5 -> [-2, 12] ( -- ) (true), state8 -> [-2, 12] ( -- ) (true), y2 -> [-2, 12] ( -- ) (true), state4 -> [-2, 12] ( -- ) (true), state1 -> [-2.5, 6.5] ( -- ) (true), state2 -> [-2.5, 6.5] ( -- ) (true), y0 -> [-2, 12] ( -- ) (true), state3 -> [-2.5, 6.5] ( -- ) (true), y1 -> [-2, 12] ( -- ) (true), y4 -> [-2, 12] ( -- ) (true), y3 -> [-2, 12] ( -- ) (true))
All constraints generated: 
(((-2.5 ≤ state0) ∧ (state0 ≤ 6.5) ∧ (-2.5 ≤ state1) ∧ (state1 ≤ 6.5) ∧ (-2.5 ≤ state2) ∧ (state2 ≤ 6.5) ∧ (-2.5 ≤ state3) ∧ (state3 ≤ 6.5) ∧ (-2.0 ≤ state4) ∧ (state4 ≤ 12.0) ∧ (-2.0 ≤ state4) ∧ (state4 ≤ 12.0) ∧ (-2.0 ≤ state5) ∧ (state5 ≤ 12.0) ∧ (-2.0 ≤ state6) ∧ (state6 ≤ 12.0) ∧ (-2.0 ≤ state7) ∧ (state7 ≤ 12.0) ∧ (-2.0 ≤ state8) ∧ (state8 ≤ 12.0) ∧ (-2.0 ≤ y0) ∧ (y0 ≤ 12.0) ∧ (-2.0 ≤ y1) ∧ (y1 ≤ 12.0) ∧ (-2.0 ≤ y2) ∧ (y2 ≤ 12.0) ∧ (-2.0 ≤ y3) ∧ (y3 ≤ 12.0) ∧ (-2.0 ≤ y4) ∧ (y4 ≤ 12.0) ∧ rndoff(state0) ∧ rndoff(state1) ∧ rndoff(state2) ∧ rndoff(state3) ∧ rndoff(state4) ∧ rndoff(state5) ∧ rndoff(state6) ∧ rndoff(state7) ∧ rndoff(state8) ∧ rndoff(y0) ∧ rndoff(y1) ∧ rndoff(y2) ∧ rndoff(y3) ∧ rndoff(y4)) && (#res == (((((((((((((((-6.84591E-4 * state0) + (-0.00276041 * state1)) + (0.00759572 * state2)) + (-0.00593566 * state3)) + (0.999506 * state4)) + (-0.00770228 * state5)) + (0.00593952 * state6)) + (0.0115632 * state7)) + (-0.0100812 * state8)) + (5.4816343E-5 * y0)) + (-8.1959323E-6 * y1)) + (-5.0852166E-6 * y2)) + (-1.5117184E-7 * y3)) + (-4.5614134E-6 * y4)) + 0.002950866881220946))) ==> noise(#res,1.0E-7)
[[34m Info  [0m] 
[[34m Info  [0m] -----> Analysing function trancair4State6...
[[34m Info  [0m] inputs: Map(state8 -> [-2, 12] ( -- ) (true), state6 -> [-2, 12] ( -- ) (true), state3 -> [-2.5, 6.5] ( -- ) (true), y2 -> [-2, 12] ( -- ) (true), state7 -> [-2, 12] ( -- ) (true), y4 -> [-2, 12] ( -- ) (true), state0 -> [-2.5, 6.5] ( -- ) (true), state1 -> [-2.5, 6.5] ( -- ) (true), y3 -> [-2, 12] ( -- ) (true), y0 -> [-2, 12] ( -- ) (true), state5 -> [-2, 12] ( -- ) (true), state2 -> [-2.5, 6.5] ( -- ) (true), y1 -> [-2, 12] ( -- ) (true), state4 -> [-2, 12] ( -- ) (true))
All constraints generated: 
(((-2.5 ≤ state0) ∧ (state0 ≤ 6.5) ∧ (-2.5 ≤ state1) ∧ (state1 ≤ 6.5) ∧ (-2.5 ≤ state2) ∧ (state2 ≤ 6.5) ∧ (-2.5 ≤ state3) ∧ (state3 ≤ 6.5) ∧ (-2.0 ≤ state4) ∧ (state4 ≤ 12.0) ∧ (-2.0 ≤ state4) ∧ (state4 ≤ 12.0) ∧ (-2.0 ≤ state5) ∧ (state5 ≤ 12.0) ∧ (-2.0 ≤ state6) ∧ (state6 ≤ 12.0) ∧ (-2.0 ≤ state7) ∧ (state7 ≤ 12.0) ∧ (-2.0 ≤ state8) ∧ (state8 ≤ 12.0) ∧ (-2.0 ≤ y0) ∧ (y0 ≤ 12.0) ∧ (-2.0 ≤ y1) ∧ (y1 ≤ 12.0) ∧ (-2.0 ≤ y2) ∧ (y2 ≤ 12.0) ∧ (-2.0 ≤ y3) ∧ (y3 ≤ 12.0) ∧ (-2.0 ≤ y4) ∧ (y4 ≤ 12.0) ∧ rndoff(state0) ∧ rndoff(state1) ∧ rndoff(state2) ∧ rndoff(state3) ∧ rndoff(state4) ∧ rndoff(state5) ∧ rndoff(state6) ∧ rndoff(state7) ∧ rndoff(state8) ∧ rndoff(y0) ∧ rndoff(y1) ∧ rndoff(y2) ∧ rndoff(y3) ∧ rndoff(y4)) && (#res == (((((((((((((((7.81569E-6 * state0) + (-7.83331E-6 * state1)) + (3.894E-8 * state2)) + (-3.04854E-8 * state3)) + (1.02522E-5 * state4)) + (0.999937 * state5)) + (9.27415E-6 * state6)) + (6.88119E-6 * state7)) + (-5.63471E-6 * state8)) + (-9.161729E-6 * y0)) + (6.1088274E-5 * y1)) + (-8.1509892E-6 * y2)) + (-6.8219061E-6 * y3)) + (5.5829936E-6 * y4)) + 1.5131516785199348E-8))) ==> noise(#res,1.0E-7)
[[34m Info  [0m] 
[[34m Info  [0m] -----> Analysing function trancair4State7...
[[34m Info  [0m] inputs: Map(state2 -> [-2.5, 6.5] ( -- ) (true), state1 -> [-2.5, 6.5] ( -- ) (true), y2 -> [-2, 12] ( -- ) (true), y1 -> [-2, 12] ( -- ) (true), state5 -> [-2, 12] ( -- ) (true), state7 -> [-2, 12] ( -- ) (true), y3 -> [-2, 12] ( -- ) (true), state0 -> [-2.5, 6.5] ( -- ) (true), y4 -> [-2, 12] ( -- ) (true), y0 -> [-2, 12] ( -- ) (true), state3 -> [-2.5, 6.5] ( -- ) (true), state8 -> [-2, 12] ( -- ) (true), state4 -> [-2, 12] ( -- ) (true), state6 -> [-2, 12] ( -- ) (true))
All constraints generated: 
(((-2.5 ≤ state0) ∧ (state0 ≤ 6.5) ∧ (-2.5 ≤ state1) ∧ (state1 ≤ 6.5) ∧ (-2.5 ≤ state2) ∧ (state2 ≤ 6.5) ∧ (-2.5 ≤ state3) ∧ (state3 ≤ 6.5) ∧ (-2.0 ≤ state4) ∧ (state4 ≤ 12.0) ∧ (-2.0 ≤ state4) ∧ (state4 ≤ 12.0) ∧ (-2.0 ≤ state5) ∧ (state5 ≤ 12.0) ∧ (-2.0 ≤ state6) ∧ (state6 ≤ 12.0) ∧ (-2.0 ≤ state7) ∧ (state7 ≤ 12.0) ∧ (-2.0 ≤ state8) ∧ (state8 ≤ 12.0) ∧ (-2.0 ≤ y0) ∧ (y0 ≤ 12.0) ∧ (-2.0 ≤ y1) ∧ (y1 ≤ 12.0) ∧ (-2.0 ≤ y2) ∧ (y2 ≤ 12.0) ∧ (-2.0 ≤ y3) ∧ (y3 ≤ 12.0) ∧ (-2.0 ≤ y4) ∧ (y4 ≤ 12.0) ∧ rndoff(state0) ∧ rndoff(state1) ∧ rndoff(state2) ∧ rndoff(state3) ∧ rndoff(state4) ∧ rndoff(state5) ∧ rndoff(state6) ∧ rndoff(state7) ∧ rndoff(state8) ∧ rndoff(y0) ∧ rndoff(y1) ∧ rndoff(y2) ∧ rndoff(y3) ∧ rndoff(y4)) && (#res == (((((((((((((((-2.3463E-9 * state0) + (7.80955E-6 * state1)) + (-7.79273E-6 * state2)) + (-2.06835E-8 * state3)) + (6.95227E-6 * state4)) + (8.71732E-6 * state5)) + (0.999932 * state6)) + (1.01306E-5 * state7)) + (-1.09525E-6 * state8)) + (-6.953786E-6 * y0)) + (-7.6514151E-6 * y1)) + (6.5402276E-5 * y2)) + (-8.997669E-6 * y3)) + (1.0601845E-6 * y4)) + 1.0261034006991257E-8))) ==> noise(#res,1.0E-7)
[[34m Info  [0m] 
[[34m Info  [0m] -----> Analysing function trancair4State8...
[[34m Info  [0m] inputs: Map(y3 -> [-2, 12] ( -- ) (true), state6 -> [-2, 12] ( -- ) (true), state2 -> [-2.5, 6.5] ( -- ) (true), state5 -> [-2, 12] ( -- ) (true), y4 -> [-2, 12] ( -- ) (true), state3 -> [-2.5, 6.5] ( -- ) (true), state0 -> [-2.5, 6.5] ( -- ) (true), state8 -> [-2, 12] ( -- ) (true), state4 -> [-2, 12] ( -- ) (true), state1 -> [-2.5, 6.5] ( -- ) (true), y1 -> [-2, 12] ( -- ) (true), y0 -> [-2, 12] ( -- ) (true), y2 -> [-2, 12] ( -- ) (true), state7 -> [-2, 12] ( -- ) (true))
All constraints generated: 
(((-2.5 ≤ state0) ∧ (state0 ≤ 6.5) ∧ (-2.5 ≤ state1) ∧ (state1 ≤ 6.5) ∧ (-2.5 ≤ state2) ∧ (state2 ≤ 6.5) ∧ (-2.5 ≤ state3) ∧ (state3 ≤ 6.5) ∧ (-2.0 ≤ state4) ∧ (state4 ≤ 12.0) ∧ (-2.0 ≤ state4) ∧ (state4 ≤ 12.0) ∧ (-2.0 ≤ state5) ∧ (state5 ≤ 12.0) ∧ (-2.0 ≤ state6) ∧ (state6 ≤ 12.0) ∧ (-2.0 ≤ state7) ∧ (state7 ≤ 12.0) ∧ (-2.0 ≤ state8) ∧ (state8 ≤ 12.0) ∧ (-2.0 ≤ y0) ∧ (y0 ≤ 12.0) ∧ (-2.0 ≤ y1) ∧ (y1 ≤ 12.0) ∧ (-2.0 ≤ y2) ∧ (y2 ≤ 12.0) ∧ (-2.0 ≤ y3) ∧ (y3 ≤ 12.0) ∧ (-2.0 ≤ y4) ∧ (y4 ≤ 12.0) ∧ rndoff(state0) ∧ rndoff(state1) ∧ rndoff(state2) ∧ rndoff(state3) ∧ rndoff(state4) ∧ rndoff(state5) ∧ rndoff(state6) ∧ rndoff(state7) ∧ rndoff(state8) ∧ rndoff(y0) ∧ rndoff(y1) ∧ rndoff(y2) ∧ rndoff(y3) ∧ rndoff(y4)) && (#res == (((((((((((((((2.5093E-10 * state0) + (9.15884E-10 * state1)) + (7.81656E-6 * state2)) + (-7.81701E-6 * state3)) + (-6.54335E-7 * state4)) + (6.87341E-6 * state5)) + (1.00368E-5 * state6)) + (0.999907 * state7)) + (3.32876E-5 * state8)) + (6.5448232E-7 * y0)) + (-6.8708837E-6 * y1)) + (-8.9460042E-6 * y2)) + (9.0317123E-5 * y3)) + (-3.2191562E-5 * y4)) + -9.65830567023206E-10))) ==> noise(#res,1.0E-7)
[[34m Info  [0m] 
[[34m Info  [0m] -----> Analysing function trancair4State9...
[[34m Info  [0m] inputs: Map(state5 -> [-2, 12] ( -- ) (true), y3 -> [-2, 12] ( -- ) (true), state6 -> [-2, 12] ( -- ) (true), state3 -> [-2.5, 6.5] ( -- ) (true), state8 -> [-2, 12] ( -- ) (true), y0 -> [-2, 12] ( -- ) (true), state0 -> [-2.5, 6.5] ( -- ) (true), state2 -> [-2.5, 6.5] ( -- ) (true), y4 -> [-2, 12] ( -- ) (true), state4 -> [-2, 12] ( -- ) (true), state7 -> [-2, 12] ( -- ) (true), state1 -> [-2.5, 6.5] ( -- ) (true), y2 -> [-2, 12] ( -- ) (true), y1 -> [-2, 12] ( -- ) (true))
All constraints generated: 
(((-2.5 ≤ state0) ∧ (state0 ≤ 6.5) ∧ (-2.5 ≤ state1) ∧ (state1 ≤ 6.5) ∧ (-2.5 ≤ state2) ∧ (state2 ≤ 6.5) ∧ (-2.5 ≤ state3) ∧ (state3 ≤ 6.5) ∧ (-2.0 ≤ state4) ∧ (state4 ≤ 12.0) ∧ (-2.0 ≤ state4) ∧ (state4 ≤ 12.0) ∧ (-2.0 ≤ state5) ∧ (state5 ≤ 12.0) ∧ (-2.0 ≤ state6) ∧ (state6 ≤ 12.0) ∧ (-2.0 ≤ state7) ∧ (state7 ≤ 12.0) ∧ (-2.0 ≤ state8) ∧ (state8 ≤ 12.0) ∧ (-2.0 ≤ y0) ∧ (y0 ≤ 12.0) ∧ (-2.0 ≤ y1) ∧ (y1 ≤ 12.0) ∧ (-2.0 ≤ y2) ∧ (y2 ≤ 12.0) ∧ (-2.0 ≤ y3) ∧ (y3 ≤ 12.0) ∧ (-2.0 ≤ y4) ∧ (y4 ≤ 12.0) ∧ rndoff(state0) ∧ rndoff(state1) ∧ rndoff(state2) ∧ rndoff(state3) ∧ rndoff(state4) ∧ rndoff(state5) ∧ rndoff(state6) ∧ rndoff(state7) ∧ rndoff(state8) ∧ rndoff(y0) ∧ rndoff(y1) ∧ rndoff(y2) ∧ rndoff(y3) ∧ rndoff(y4)) && (#res == (((((((((((((((-1.73572E-9 * state0) + (-6.90441E-9 * state1)) + (1.91831E-8 * state2)) + (7.80416E-6 * state3)) + (5.01527E-6 * state4)) + (-4.73947E-6 * state5)) + (4.30545E-7 * state6)) + (3.35281E-5 * state7)) + (0.999934 * state8)) + (-5.0163739E-6 * y0)) + (4.7201386E-6 * y1)) + (-4.156438E-7 * y2)) + (-3.2406398E-5 * y3)) + (6.4987306E-5 * y4)) + 7.402204482912982E-9))) ==> noise(#res,1.0E-7)
[[34m Info  [0m] Simulation size: 1000000
[[34m Info  [0m] -----> Simulating function ballBeam...
[[34m Info  [0m] -----> Simulating function batchReactorOut1...
[[34m Info  [0m] -----> Simulating function batchReactorOut2...
[[34m Info  [0m] -----> Simulating function batchReactorState1...
[[34m Info  [0m] -----> Simulating function batchReactorState2...
[[34m Info  [0m] -----> Simulating function batchReactorState3...
[[34m Info  [0m] -----> Simulating function batchReactorState4...
[[34m Info  [0m] -----> Simulating function trancair4Out...
[[34m Info  [0m] -----> Simulating function trancair4State1...
[[34m Info  [0m] -----> Simulating function trancair4State2...
[[34m Info  [0m] -----> Simulating function trancair4State3...
[[34m Info  [0m] -----> Simulating function trancair4State4...
[[34m Info  [0m] -----> Simulating function trancair4State5...
[[34m Info  [0m] -----> Simulating function trancair4State6...
[[34m Info  [0m] -----> Simulating function trancair4State7...
[[34m Info  [0m] -----> Simulating function trancair4State8...
[[34m Info  [0m] -----> Simulating function trancair4State9...
[[34m Info  [0m] . ┌─────────┐
          ╔═╡ Summary ╞═══════════════════════════════════════════════════════════════════════╗
          ║ └─────────┘                                                                       ║
          ║ ballBeam                        -- ms      -- ms                                  ║
          ║                                 --                                 ║
          ║ sim range: [-3365.195343443244,490.2556801713280] (9.094947017729282E-13)           ║
          ║ int range: [-3398.900000000001,514.3000000000001]                                 ║
          ║ sm range: [-3398.900000000002,514.3000000000017]  (2.0238699605101834E-12)(abs)║
          ╟┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄╢
          ║ batchReactorOut1                -- ms      -- ms                                  ║
          ║                                 --                                 ║
          ║ sim range: [-2.125261023077063,2.133951487845988] (4.440892098500626E-16)           ║
          ║ int range: [-2.164500000000000,2.164500000000000]                                 ║
          ║ sm range: [-2.164500000000001,2.164500000000001]  (1.2120304759832838E-15)(abs)║
          ╟┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄╢
          ║ batchReactorOut2                -- ms      -- ms                                  ║
          ║                                 --                                 ║
          ║ sim range: [-5.292351023441810,5.273330419502900] (8.881784197001252E-16)           ║
          ║ int range: [-5.389400000000001,5.389400000000001]                                 ║
          ║ sm range: [-5.389400000000003,5.389400000000003]  (3.1414759682490974E-15)(abs)║
          ╟┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄╢
          ║ batchReactorState1              -- ms      -- ms                                  ║
          ║                                 --                                 ║
          ║ sim range: [-1.046807096330511,1.047889126907406] (4.440892098500626E-16)           ║
          ║ int range: [-1.068467000000001,1.068467000000001]                                 ║
          ║ sm range: [-1.068467000000001,1.068467000000001]  (9.11750897003572E-16)(abs)║
          ╟┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄╢
          ║ batchReactorState2              -- ms      -- ms                                  ║
          ║                                 --                                 ║
          ║ sim range: [-0.9670215060492254,0.9592074284322119] (3.3306690738754696E-16)           ║
          ║ int range: [-0.9766780000000004,0.9766780000000004]                                 ║
          ║ sm range: [-0.9766780000000008,0.9766780000000008]  (8.450928845604725E-16)(abs)║
          ╟┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄╢
          ║ batchReactorState3              -- ms      -- ms                                  ║
          ║                                 --                                 ║
          ║ sim range: [-1.086016986412054,1.095078358159819] (4.440892098500626E-16)           ║
          ║ int range: [-1.130735000000001,1.130735000000001]                                 ║
          ║ sm range: [-1.130735000000001,1.130735000000001]  (8.590900213434341E-16)(abs)║
          ╟┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄╢
          ║ batchReactorState4              -- ms      -- ms                                  ║
          ║                                 --                                 ║
          ║ sim range: [-1.112442357644532,1.112422601370397] (4.440892098500626E-16)           ║
          ║ int range: [-1.134078000000001,1.134078000000001]                                 ║
          ║ sm range: [-1.134078000000001,1.134078000000001]  (7.692769754541475E-16)(abs)║
          ╟┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄╢
          ║ trancair4Out                    -- ms      -- ms                                  ║
          ║                                 --                                 ║
          ║ sim range: [-507549.2970846035,493681.5236614480] (1.1641532182693481E-10)           ║
          ║ int range: [-584294.3905503358,569108.6094496646]                                 ║
          ║ sm range: [-584294.3905503361,569108.6094496650]  (5.489756982335339E-10)(abs)║
          ╟┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄╢
          ║ trancair4State1                 -- ms      -- ms                                  ║
          ║                                 --                                 ║
          ║ sim range: [-2.500913642465509,6.500854109246252] (4.440892098500626E-15)           ║
          ║ int range: [-2.502143420866931,6.502143215649077]                                 ║
          ║ sm range: [-2.502143420866939,6.502143215649082]  (1.082765223042328E-14)(abs)║
          ╟┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄╢
          ║ trancair4State2                 -- ms      -- ms                                  ║
          ║                                 --                                 ║
          ║ sim range: [-2.500820632909596,6.500805549013292] (4.440892098500626E-15)           ║
          ║ int range: [-2.502402589905090,6.502402633139918]                                 ║
          ║ sm range: [-2.502402589905098,6.502402633139925]  (1.1549545157325326E-14)(abs)║
          ╟┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄╢
          ║ trancair4State3                 -- ms      -- ms                                  ║
          ║                                 --                                 ║
          ║ sim range: [-2.500656115298830,6.500816997331531] (4.440892098500626E-15)           ║
          ║ int range: [-2.501778300489609,6.501778081156460]                                 ║
          ║ sm range: [-2.501778300489615,6.501778081156465]  (1.0826992264901111E-14)(abs)║
          ╟┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄╢
          ║ trancair4State4                 -- ms      -- ms                                  ║
          ║                                 --                                 ║
          ║ sim range: [-2.501016097855988,6.501086591639909] (3.552713678800501E-15)           ║
          ║ int range: [-2.501930512115995,6.501930617271904]                                 ║
          ║ sm range: [-2.501930512116002,6.501930617271907]  (1.010581902694298E-14)(abs)║
          ╟┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄╢
          ║ trancair4State5                 -- ms      -- ms                                  ║
          ║                                 --                                 ║
          ║ sim range: [-2.225078962077950,12.21640355866957] (8.881784197001252E-15)           ║
          ║ int range: [-2.324757487114462,12.31614008296551]                                 ║
          ║ sm range: [-2.324757487114476,12.31614008296552]  (1.9155686237168464E-14)(abs)║
          ╟┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄╢
          ║ trancair4State6                 -- ms      -- ms                                  ║
          ║                                 --                                 ║
          ║ sim range: [-1.999992389739480,11.99973907434369] (7.105427357601002E-15)           ║
          ║ int range: [-2.000488125740385,12.00049121407483]                                 ║
          ║ sm range: [-2.000488125740399,12.00049121407484]  (1.7319812309413712E-14)(abs)║
          ╟┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄╢
          ║ trancair4State7                 -- ms      -- ms                                  ║
          ║                                 --                                 ║
          ║ sim range: [-2.000001485979947,11.99974405767629] (7.105427357601002E-15)           ║
          ║ int range: [-2.000415218794868,12.00041085978174]                                 ║
          ║ sm range: [-2.000415218794883,12.00041085978175]  (1.5987435632076338E-14)(abs)║
          ╟┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄╢
          ║ trancair4State8                 -- ms      -- ms                                  ║
          ║                                 --                                 ║
          ║ sim range: [-1.999911535134699,12.00016133001334] (7.105427357601002E-15)           ║
          ║ int range: [-2.000750648097307,12.00074571533711]                                 ║
          ║ sm range: [-2.000750648097320,12.00074571533711]  (1.46553937221963E-14)(abs)║
          ╟┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄╢
          ║ trancair4State9                 -- ms      -- ms                                  ║
          ║                                 --                                 ║
          ║ sim range: [-2.000134637043874,11.99998943660504] (7.105427357601002E-15)           ║
          ║ int range: [-2.000615904463992,12.00064821281929]                                 ║
          ║ sm range: [-2.000615904464003,12.00064821281929]  (1.3323166083590906E-14)(abs)║
          ╟┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄╢
          ╚═══════════════════════════════════════════════════════════════════════════════════╝
